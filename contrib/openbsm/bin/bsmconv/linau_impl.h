#ifndef _LINAU_IMPL_H_
#define _LINAU_IMPL_H_

#include <sys/nv.h>
#include <sys/types.h>

#include <stdbool.h>

#define DEFINE_LINAU_TYPE(name, id) #define

#define	LINAU_TYPE_GET			"GET"

/* Beging of a deprecated types section. */
#define	LINAU_SET			"SET"
#define	LINAU_LIST			"LIST"
#define	LINAU_ADD			"ADD"
#define	LINAU_DEL			"DEL"
/* End of a deprecated types section. */

#define	LINAU_USER			"USER"
#define	_S(AUDILINAU_SIGNAL_INFO	"SIGNAL_INFO"

/* Beging of a deprecated types section. */
#define	LINAU_ADD_RULE			"ADD_RULE"
#define	LINAU_DEL_RULE			"DEL_RULE"
#define	LINAU_LIST_RULES		"LIST_RULES"
#define	LINAU_TRIM			"TRIM"
#define	LINAU_MAKE_EQUIV		"MAKE_EQUIV"
#define	LINAU_TTY_GET			"TTY_GET"
#define	LINAU_TTY_SET			"TTY_SET"
#define	LINAU_SET_FEATURE		"SET_FEATURE"
#define	LINAU_GET_FEATURE		"GET_FEATURE"
/* End of a deprecated types section. */

#define	AUDILINAU_USER_ACCT		"USER_ACCT"
#define	AUDILINAU_CRED_ACQ		"CRED_ACQ"
#define	AUDILINAU_USER_START		"USER_START"
#define	AUDILINAU_USER_AVC		"USER_AVC"
#define	AUDILINAU_USER_ERR		"USER_ERR"
#define	AUDILINAU_USYS_CONFIG		"USYS_CONFIG"
#define	LINAU_USER_LOGIN		"USER_LOGIN"
#define	LINAU_USER_LOGOUT		"USER_LOGOUT"
#define	LINAU_ADD_USER			"ADD_USER"
#define	LINAU_DEL_USER			"DEL_USER"
#define	LINAU_ADD_GROUP			"ADD_GROUP"
#define	LINAU_DEL_GROUP			"DEL_GROUP"
#define	LINAU_DAC_CHECK			"DAC_CHECK"
#define	LINAU_CHGRP_ID			"CHGRP_ID"
#define	LINAU_TEST			"TEST"
#define	LINAU_TRUSTED_APP		"TRUSTED_APP"
#define	LINAU_USER_SELINUX_ERR		"USER_SELINUX_ERR"
#define	LINAU_USER_CMD			"USER_CMD"
#define	LINAU_USER_TTY			"USER_TTY"
#define	LINAU_CHUSER_ID			"CHUSER_ID"
#define	LINAU_GRP_AUTH			"GRP_AUTH"
#define	LINAU_MAC_CHECK			"MAC_CHECK"
#define	LINAU_ACCT_LOCK			"ACCT_LOCK"
#define	LINAU_ACCT_UNLOCK		"ACCT_UNLOCK"
#define	LINAU_SYSTEM_BOOT		"SYSTEM_BOOT"
#define	LINAU_SYSTEM_SHUTDOWN		"SYSTEM_SHUTDOWN"
#define	LINAU_SYSTEM_RUNLEVEL		"SYSTEM_RUNLEVEL"
#define	LINAU_SERVICE_START		"SERVICE_START"
#define	LINAU_SERVICE_STOP		"SERVICE_STOP"
#define	LINAU_GRP_MGMT			"GRP_MGMT"
#define	LINAU_GRP_CHAUTHTOK		"GRP_CHAUTHTOK"
#define	LINAU_DAEMON_START		"DAEMON_START"
#define	LINAU_DAEMON_END		"DAEMON_END"
#define	LINAU_DAEMON_ABORT		"DAEMON_ABORT"
#define	LINAU_DAEMON_CONFIG		"DAEMON_CONFIG"
#define	LINAU_DAEMON_RECONFIG		"DAEMON_RECONFIG" /* Deprecated. */
#define	LINAU_DAEMON_ROTATE		"DAEMON_ROTATE"
#define	LINAU_DAEMON_RESUME		"DAEMON_RESUME"
#define	LINAU_DAEMON_ACCEPT		"DAEMON_ACCEPT"
#define	LINAU_DAEMON_CLOSE		"DAEMON_CLOSE"
#define	LINAU_DAEMON_ERR		"DAEMON_ERR"
#define	LINAU_SYSCALL			"SYSCALL"
#define	LINAU_FS_WATCH			"FS_WATCH" /* Deprecated. */
#define	LINAU_PATH			"PATH"
#define	LINAU_IPC			"IPC"
#define	LINAU_SOCKETCALL		"SOCKETCALL"
#define	LINAU_CONFIG_CHANGE		"CONFIG_CHANGE"
#define	LINAU_SOCKADDR			"SOCKADDR"
#define	LINAU_CWD			"CWD"
#define	LINAU_FS_INODE			"FS_INODE" /* Deprecated. */
#define	LINAU_EXECVE			"EXECVE"
#define	LINAU_IPC_SET_PERM		"IPC_SET_PERM"
#define	LINAU_MQ_OPEN			"MQ_OPEN"
#define	LINAU_MQ_SENDRECV		"MQ_SENDRECV"
#define	LINAU_MQ_NOTIFY			"MQ_NOTIFY"
#define	LINAU_MQ_GETSETATTR		"MQ_GETSETATTR"
#define	LINAU_KERNEL_OTHER		"KERNEL_OTHER"
#define	LINAU_FD_PAIR			"FD_PAIR"
#define	LINAU_OBJ_PID			"OBJ_PID"
#define	LINAU_TTY			"TTY"
#define	LINAU_EOE			"EOE"
#define	LINAU_BPRM_FCAPS		"BPRM_FCAPS"
#define	LINAU_CAPSET			"CAPSET"
#define	LINAU_MMAP			"MMAP"
#define	LINAU_NETFILTER_PKT		"NETFILTER_PKT"
#define	LINAU_NETFILTER_CFG		"NETFILTER_CFG"
#define	LINAU_SECCOMP			"SECCOMP"
#define	LINAU_PROCTITLE			"PROCTITLE"
#define	LINAU_FEATURE_CHANGE		"FEATURE_CHANGE"
#define	LINAU_AVC			"AVC"
#define	LINAU_SELINUX_ERR		"SELINUX_ERR"
#define	LINAU_AVC_PATH			"AVC_PATH"
#define	LINAU_MAC_POLICY_LOAD		"MAC_POLICY_LOAD"
#define	LINAU_MAC_STATUS		"MAC_STATUS"
#define	LINAU_MAC_CONFIG_CHANGE		"MAC_CONFIG_CHANGE"
#define	LINAU_MAC_UNLBL_ALLOW		"MAC_UNLBL_ALLOW"
#define	LINAU_MAC_CIPSOV4_ADD		"MAC_CIPSOV4_ADD"
#define	LINAU_MAC_CIPSOV4_DEL		"MAC_CIPSOV4_DEL"
#define	LINAU_MAC_MAP_ADD		"MAC_MAP_ADD"
#define	LINAU_MAC_MAP_DEL		"MAC_MAP_DEL"
#define	LINAU_MAC_IPSEC_ADDSA		"MAC_IPSEC_ADDSA"
#define	LINAU_MAC_IPSEC_DELSA		"MAC_IPSEC_DELSA"
#define	LINAU_MAC_IPSEC_ADDSPD		"MAC_IPSEC_ADDSPD"
#define	LINAU_MAC_IPSEC_DELSPD		"MAC_IPSEC_DELSPD"
#define	LINAU_MAC_IPSEC_EVENT		"MAC_IPSEC_EVENT"
#define	LINAU_MAC_UNLBL_STCADD		"MAC_UNLBL_STCADD"
#define	LINAU_MAC_UNLBL_STCDEL		"MAC_UNLBL_STCDEL"
#define	LINAU_ANOM_PROMISCUOUS		"ANOM_PROMISCUOUS"
#define	LINAU_ANOM_ABEND		"ANOM_ABEND"
#define	LINAU_ANOM_LINK			"ANOM_LINK"
#define	LINAU_INTEGRITY_DATA		"INTEGRITY_DATA"
#define	LINAU_INTEGRITY_STATUS		"INTEGRITY_STATUS"
#define	LINAU_INTEGRITY_HASH		"INTEGRITY_HASH"
#define	LINAU_INTEGRITY_PCR		"INTEGRITY_PCR"
#define	LINAU_INTEGRITY_RULE		"INTEGRITY_RULE"

/* XXX What is this? */
#ifdef WITH_APPARMOR
#define	LINAU_AA			"APPARMOR"
#define	LINAU_APPARMOR_AUDIT		"APPARMOR_AUDIT"
#define	LINAU_APPARMOR_ALLOWED		"APPARMOR_ALLOWED"
#define	LINAU_APPARMOR_DENIED		"APPARMOR_DENIED"
#define	LINAU_APPARMOR_HINT		"APPARMOR_HINT"
#define	LINAU_APPARMOR_STATUS		"APPARMOR_STATUS"
#define	LINAU_APPARMOR_ERROR		"APPARMOR_ERROR"
#endif

#define	LINAU_KERNEL			"KERNEL"
#define	LINAU_ANOM_LOGIN_FAILURES	"ANOM_LOGIN_FAILURES"
#define	LINAU_ANOM_LOGIN_TIME		"ANOM_LOGIN_TIME"
#define	LINAU_ANOM_LOGIN_SESSIONS	"ANOM_LOGIN_SESSIONS"
#define	LINAU_ANOM_LOGIN_ACCT		"ANOM_LOGIN_ACCT"
#define	LINAU_ANOM_LOGIN_LOCATION	"ANOM_LOGIN_LOCATION"
#define	LINAU_ANOM_MAX_DAC		"ANOM_MAX_DAC"
#define	LINAU_ANOM_MAX_MAC		"ANOM_MAX_MAC"
#define	LINAU_ANOM_AMTU_FAIL		"ANOM_AMTU_FAIL"
#define	LINAU_ANOM_RBAC_FAIL		"ANOM_RBAC_FAIL"
#define	LINAU_ANOM_RBAC_INTEGRITY_FAIL	"ANOM_RBAC_INTEGRITY_FAIL"
#define	LINAU_ANOM_CRYPTO_FAIL		"ANOM_CRYPTO_FAIL"
#define	LINAU_ANOM_ACCESS_FS		"ANOM_ACCESS_FS"
#define	LINAU_ANOM_EXEC			"ANOM_EXEC"
#define	LINAU_ANOM_MK_EXEC		"ANOM_MK_EXEC"
#define	LINAU_ANOM_ADD_ACCT		"ANOM_ADD_ACCT"
#define	LINAU_ANOM_DEL_ACCT		"ANOM_DEL_ACCT"
#define	LINAU_ANOM_MOD_ACCT		"ANOM_MOD_ACCT"
#define	LINAU_ANOM_ROOT_TRANS		"ANOM_ROOT_TRANS"
#define	LINAU_RESP_ANOMALY		"RESP_ANOMALY"
#define	LINAU_RESP_ALERT		"RESP_ALERT"
#define	LINAU_RESP_KILL_PROC		"RESP_KILL_PROC"
#define	LINAU_RESP_TERM_ACCESS		"RESP_TERM_ACCESS"
#define	LINAU_RESP_ACCT_REMOTE		"RESP_ACCT_REMOTE"
#define	LINAU_RESP_ACCT_LOCK_TIMED	"RESP_ACCT_LOCK_TIMED"
#define	LINAU_RESP_ACCT_UNLOCK_TIMED	"RESP_ACCT_UNLOCK_TIMED"
#define	LINAU_RESP_ACCT_LOCK		"RESP_ACCT_LOCK"
#define	LINAU_RESP_TERM_LOCK		"RESP_TERM_LOCK"
#define	LINAU_RESP_SEBOOL		"RESP_SEBOOL"
#define	LINAU_RESP_EXEC			"RESP_EXEC"
#define	LINAU_RESP_SINGLE		"RESP_SINGLE"
#define	LINAU_RESP_HALT			"RESP_HALT"
#define	LINAU_USER_ROLE_CHANGE		"USER_ROLE_CHANGE"
#define	LINAU_ROLE_ASSIGN		"ROLE_ASSIGN"
#define	LINAU_ROLE_REMOVE		"ROLE_REMOVE"
#define	LINAU_LABEL_OVERRIDE		"LABEL_OVERRIDE"
#define	LINAU_LABEL_LEVEL_CHANGE	"LABEL_LEVEL_CHANGE"
#define	LINAU_USER_LABELED_EXPORT	"USER_LABELED_EXPORT"
#define	LINAU_USER_UNLABELED_EXPORT	"USER_UNLABELED_EXPORT"
#define	LINAU_DEV_ALLOC			"DEV_ALLOC"
#define	LINAU_DEV_DEALLOC		"DEV_DEALLOC"
#define	LINAU_FS_RELABEL		"FS_RELABEL"
#define	LINAU_USER_MAC_POLICY_LOAD	"USER_MAC_POLICY_LOAD"
#define	LINAU_ROLE_MODIFY		"ROLE_MODIFY"
#define	LINAU_USER_MAC_CONFIG_CHANGE	"USER_MAC_CONFIG_CHANGE"
#define	LINAU_CRYPTO_TEST_USER		"CRYPTO_TEST_USER"
#define	LINAU_CRYPTO_PARAM_CHANGE_USER	"CRYPTO_PARAM_CHANGE_USER"
#define	LINAU_CRYPTO_LOGIN		"CRYPTO_LOGIN"
#define	LINAU_CRYPTO_LOGOUT		"CRYPTO_LOGOUT"
#define	LINAU_CRYPTO_KEY_USER		"CRYPTO_KEY_USER"
#define	LINAU_CRYPTO_FAILURE_USER	"CRYPTO_FAILURE_USER"
#define	LINAU_CRYPTO_REPLAY_USER	"CRYPTO_REPLAY_USER"
#define	LINAU_CRYPTO_SESSION		"CRYPTO_SESSION"
#define	LINAU_CRYPTO_IKE_SA		"CRYPTO_IKE_SA"
#define	LINAU_CRYPTO_IPSEC_SA		"CRYPTO_IPSEC_SA"
#define	LINAU_VIRT_CONTROL		"VIRT_CONTROL"
#define	LINAU_VIRT_RESOURCE		"VIRT_RESOURCE"
#define	LINAU_VIRT_MACHINE_ID		"VIRT_MACHINE_ID"


int		 linau_proto_compare_origin(uint32_t id1, uint64_t time1,
		    uint32_t id2, uint64_t time2);

bool		 find_position(size_t *posp, const char *buf, size_t start,
		    char chr);
void		 locate_msg(const char *buf, size_t *msgstartp,
		    size_t *secsposp, size_t *nsecsposp, size_t *idposp,
		    size_t *msgendp);
char		*extract_substring(const char *buf, size_t start, size_t len);
uint64_t	 combine_secs_with_nsecs(uint32_t secs, uint32_t nsecs);


#endif
